// Button
// All clickable buttons and their types - text, icon, selector.

// Block
.button {
	@include form-group;
	@include flex(none);
	font-size: s(1);
	height: inherit;
	display: inline-block;
	text-align: center;
	width: auto;
	-webkit-touch-callout: none;
	cursor: pointer;

	transition:
		background-color $normal,
		border-color $normal,
		color $normal;

	&:hover, &:focus {
		transition: none;
	}
}


// Elements
.button input, .button a { // Inner object content
	display: block;
	height: 100%;
	border: none;
	text-transform: uppercase;
	cursor: pointer;

	&:hover, &:focus {
		color: inherit;
		text-decoration: none;
	}
}

.button input[type="file"] {
	display: none !important; // Hide upload file buttons in .button
}


// Modifiers
.button.inner-button {
	@include border;
	border-left: 0 !important;
}

.button.full {
	width: 100%;
}


// Button types
// Topbar buttons mainly with icons
.button.icon {
	overflow: hidden;
	display: inline-block;
	position: relative;
	font-size: s(1.5);

	@include button-icon-colors; // Icon button color schemes, let a mixin handle the color rules

	&:hover, &:focus {
		@include theme {
			color: $theme-primary;
		}
		background-color: $lighter-grey;
	}

	// TESTING: Using 100% width in all icon button ::before element (the icon itself)
	// Fixes unnecessarily cropped icons
	&::before {
		width: 100%;
	}

	// States
	// Icon buttons with labels (iOS style)
	&.has-label {

		&::before {
			position: relative;
			top: rem(-6);
		}
	}

	&.has-error {
		color: $error;
		border-color: $error;
	}

	&.is-disabled {

		input {
			cursor: default;
		}
	}

	&.menu-is-open {
		background-color: $darker;
		color: $white !important;

		transition:
			background-color $normal,
			color $normal;

		&:hover {
			// background-color: $dark;
			transition: none;
		}
	}

	// Location
	.topbar & {
		width: $menu-height;
		border-left: 1px solid;
		border-right: 1px solid;
		@include theme {
			border-color: $theme-border-grey;
		}
		margin-left: -1px; // Hides one of the borders
	}

	.box-head & {
		@include square-size($box-head-size);

	}

	.service-group-header & {
		@include square-size($service-group-height);
	}

	.topbar[iw-type="main"] & {

		@media #{$small-only} {
			border: none;
			margin: 0;
		}
	}

	.table & {
		@include square-size($table-cell-height);
		margin: auto;
	}

	// Modifiers
	&[class*="-circle"],
	&.large {
		font-size: s(2.5);
	}

	// Inner input button
	&.inner-button {
		@include square-size($object-height);
		vertical-align: initial;

		input, a {
			padding: 0;
			text-transform: none;

			&:hover  {
				text-decoration: underline;
			}
		}

		&:hover, &:focus, &:active {
			transition: none;
			text-decoration: none;
		}
	}

	&.small {
		font-size: s(1.2);
		font-weight: 600;
	}

	&.borderless {
		border-color: $transparent !important;
	}

	// Elements
	.button-icon-label {
		@include text-ellipsis;
		font-family: $font-family;
		line-height: $default-line-height;
		font-size: rem(12);
		text-align: center;
		position: absolute;
		width: 100%;
		left: 0;
		bottom: 0;
	}

	input, a {
		padding: 0;
		position: absolute;
		height: 100%;
		width: 100%;
		left: 0;
		top: 0;
	}
}

// Classic buttons mainly with text
.button.text {
	border-radius: $radius;
	border-bottom: $button-bottom-border;
	height: $object-height;
	line-height: $object-height;
	font-weight: 600;
	vertical-align: top;

	@include button-text-colors; // Text button color schemes, Let a mixin handle the color rules

	&:not(:only-of-type), // TESTING: Should make more than one inline-block buttons stack correctly
	.button-group & {
		margin-bottom: g(1);
	}

	// Location
	.box-content & { // Resize all buttons to 100% in box-content on mobile

		@media #{$small-only} {
			width: 100%;
		}
	}

	.box-foot & { // Resize all buttons to 100% in box-content on mobile

		input {
			width: initial;
		}
	}

	.topbar & {
		margin: auto g(1);
		vertical-align: middle;
	}

	.box-head & {
		margin-bottom: 0;
	}

	@at-root .button-group 	{ margin-left: g(-1); }
	.button-group & 		{ margin-left: g(1); }

	// Modifiers
	&.borderless {
		color: $blue-grey;
		border-color: $transparent;
		background-color: $transparent;
		padding-top: 0;

		&:hover, &:active {
			@include theme {
				color: $theme-primary;
			}
			background-color: $transparent;
		}
	}

	&.small {
		height: $button-small-height;
		line-height: $button-small-height;

		input {
			padding: 0 s(1);
		}
	}

	// Inner input button
	&.inner-button {
		@include theme {
			color: $theme-primary;
		}
		background-color: $transparent;

		input, a {
			text-transform: none;

			&:hover  {
				text-decoration: underline;
			}
		}

		&:hover, &:focus, &:active {
			transition: none;
			text-decoration: none;
		}
	}

	// Inverted
	&.inverted {
		@include theme {
			color: $theme-primary;
		}
		background-color: $white;
	}

	&.link {
		position: relative;
		margin: 0 1rem;
		font-size: rem(20);
		font-weight: normal;
		text-decoration: underline;
		vertical-align: text-bottom;
		background: none !important;
		@include theme {
			color: $theme-primary;
		}

		> * {
			text-transform: none;
		}

		&::before {
			content: '';
			position: absolute;
			left: 0;
			top: 20%;
			bottom: 20%;
			display: block;
			width: 1px;
			background-color: $blue-grey;
		}
	}

	&[class^="icon-"],
	&[class*=" icon-"] {

		&::before,
		input {
			vertical-align: top;
		}

		&::before {
			// @include square-size($object-height);
			width: $object-height;
			height: $object-height;
			font-weight: inherit;
		}

		input {
			display: inline-block;
			padding-left: 0;
			width: auto;
		}
	}

	// Used for context buttons under modal tables, permission folders, etc.
	&.context {
		position: relative;
		margin: g(1) 0;
		box-shadow: // Hides background below the button context area
			0 g(1) $white,
			0 g(-1) $white;

		&::before {
			content: '';
			display: block;
			position: absolute;
			width: 100%;
			top: g(-1);
			@include border('top');
		}
	}

	// States
	// Disabled button state
	&.is-disabled {

		input, a { // Disables hover cursor on form input
			cursor: default;
		}
	}

	// Elements
	input, a {
		@include text-ellipsis;
		padding: 0 p(1.5);
	}
}

// Selector button
.button[iw-type="select"] {
	@include dropdown-arrow; // Adds dropdown arrow icon
	width: 100%; // Always be 100%, let parent object .selector control the width

	// Location
	.box-action & { // Use different orientation of arrow in box-action on mobile

		@media #{$small-only} {
			@include dropdown-arrow(up);
		}
	}

	// Elements
	input, a {
		padding-right: p(3);
	}
}


// Wrappers
.button-group {
	margin-bottom: g(-1);
}
